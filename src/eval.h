#pragma once

#include <stdint.h>
#include "board.h"

int evaluate(Board *board);
void printEvaluation(Board *board);


/* -------------------------------------------------------------------------- */
/*                              Evaluation Terms                              */
/* -------------------------------------------------------------------------- */
// This is a basic evaluation for now, just so search will work.
// Eventually, texel tuning, pawn structures, king safety etc are planned.

static const int MATERIAL_VALUES[NB_PIECES] = {
    95, 325, 335, 480, 1000, 100000
};

#define BISHOP_PAIR_VALUE 40

static const int PSQT[NB_PIECES][64] = {
    // Pawns
    {
      0,  0,  0,  0,  0,  0,  0,  0,
     50, 50, 50, 50, 50, 50, 50, 50,
     10, 20, 20, 30, 30, 20, 20, 10,
      5,  5,  5, 23, 25,  5,  5,  5,
      2, -5,  5, 17, 20,  0,  0,  2,
      3,  0,  2,  2,  3, -5,  3,  4,
      5, 10,  0, -8, -8, 13, 10,  3,
      0,  0,  0,  0,  0,  0,  0,  0,
    },
    // Knights
    {
    -30,-20,-20,-20,-20,-20,-20,-30,
    -20,-10,  0,  0,  0,  0,-10,-20,
    -20,  0, 15, 25, 25, 15,  0,-20,
    -20,  5, 20, 20, 20, 20,  5,-20,
    -20,  0,  7, 15, 15,  8,  0,-20,
    -20,  5,  4,  4,  4,  5,  5,-20,
    -20,-10,  0,  1,  1,  0,-10,-20,
    -30, -5, -3, -3, -3, -3, -5,-30,
    },
    // Bishops
    {
    -10,-10,-10,-10,-10,-10,-10,-10,
     -2, 10,  0,  0,  0,  0, 10, -2,
     -2,  3,  5, 10, 10,  5,  3, -2,
     -2,  9,  6, 15, 15,  6,  9, -2,
     -2,  0,  9, 15, 15,  9,  0, -2,
     -2,  8,  5,  3,  3,  8,  4, -3,
     -2, 10,  1,  1,  1,  1, 15, -2,
     -5, -5, -5, -4, -4, -5, -5, -5,
    },
    // Rooks
    {
      5,  5,  5,  5,  5,  5,  5,  5,
     10, 20, 20, 20, 20, 20, 20, 10,
     -5,  0,  3,  3,  3,  3,  0, -5,
     -5,  0,  3,  3,  3,  3,  0, -5,
     -5,  0,  3,  3,  3,  3,  0, -5,
     -5,  0,  3,  3,  3,  3,  0, -5,
     -8,  0,  0,  3,  3,  0,  0, -8,
    -10, -8,  5, 10, 10,  5, -8,-10,
    },
    // Queens
    {
    -30,-25,-25,-25,-25,-25,-10,-30,
    -10,-10,-20,-20,-20,-20,-10,-10,
    -10,-10,-15,-15,-15,-15,-10,-10,
    -10,-10,-15,-15,-15,-15,-10,-10,
     -5,-10,-10,-10,-10,-10,-10, -5,
     -5, -5,  0,  0,  0,  0, -5, -5,
     -5, -5,  9,  5,  5,  2, -5, -5,
    -10, -5, -2, -2, -2, -2, -5,-10,
    },
    // Kings
    {
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-30,-30,-30,-30,-30,-30,-30,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -10,-20,-15,-20,-20,-15,-20,-10,
     20, 11,-10,-10,-10,-10, 12, 20,
     15, 25,  3, -5, -5,  5, 28, 18,
    }
};

